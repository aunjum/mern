import React, {useState, useEffect} from 'react'
import Paper from '@mui/material/Paper';
import Table from '@mui/material/Table';
import TableBody from '@mui/material/TableBody';
import TableCell from '@mui/material/TableCell';
import TableContainer from '@mui/material/TableContainer';
import TableHead from '@mui/material/TableHead';
import TablePagination from '@mui/material/TablePagination';
import TableRow from '@mui/material/TableRow';
import ButtonGroup from '@mui/material/ButtonGroup';
import Button from '@mui/material/Button';
import Stack from '@mui/material/Stack';
import styles from './UserDashboardTable.module.css';
import CreateOrganization from '../../../OrganizationComponents/CreateOrganization';
import OrganaizationModal from '../../../OrganizationComponents/OrganizationModal';
import FetchAllOrganizationApiHandler from '../../../OrganizationComponents/CreateOrganization/OrganizationApi/FetchAllOrganizationApiHandler';
import ProjectModal from '../../../ProjectComponents/ProjectModal';
import Menu from '@mui/material/Menu';
import MenuItem from '@mui/material/MenuItem';
import ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';

const columns = [
    { id: 'name', label: 'Name', minWidth: 170 ,align:'center'},
    { id: 'group', label: 'Group', minWidth: 100, align:'center' },
    {
      id: 'project',
      label: 'Project',
      minWidth: 170,
      align: 'center',

    },
    {
      id: 'info',
      label: 'Info',
      minWidth: 170,
      align: 'center',
    },
    {
      id: 'status',
      type: 'button',
      label: 'Status',
      minWidth: 170,
      align: 'center',
    },
  ];
  
  function createData(projectName, registrationDate,numberofTracking, numberTracked,trackedCount,numberofDevice) {
    const density = projectName / 12;
    return { projectName, registrationDate,numberofTracking, numberTracked,trackedCount,numberofDevice };
  }
  
  const rows = [
    createData('ETTMS-V2-TEST', '2022-10-10 18:53:09', "9", "1","0","3"),
    createData('ETTMS-V3-TEST', '2022-10-10 18:53:09', "3", "7","2","2"),
    createData('ETTMS-V4-TEST', '2022-10-10 18:53:09', "5", "1","7","6"),
    createData('ETTMS-V5-TEST', '2022-10-10 18:53:09', "2", "2","1","3"),
    createData('ETTMS-V6-TEST', '2022-10-10 18:53:09', "7", "3","9","6"),
   
    
   
   
  ];

  const getDatePlease = (D) =>{
    return new Date(D).toLocaleString();
  }
  

const UserDashboardTable = () => {

    const [page, setPage] = useState(0);
    const [rowsPerPage, setRowsPerPage] = useState(10);
    const [dashboardData, setDashboardData] = useState([]);
    console.log(dashboardData);
    const [anchorEl, setAnchorEl] = React.useState(null);
  const open = Boolean(anchorEl);
  const handleClick = (event) => {
    setAnchorEl(event.currentTarget);
  };
  const handleClose = () => {
    setAnchorEl(null);
  };

    // useEffect( ()=>{
    //   const FetchData = async() =>{
    //     const response =  await FetchAllOrganizationApiHandler();
    //     console.log("organizatoin all data",response.body)
    //     setDashboardData(response.body);
        
    //   }
    //  FetchData()

    // },[])
  
    const handleChangePage = (event, newPage) => {
      setPage(newPage);
    };
  
    const handleChangeRowsPerPage = (event) => {
      setRowsPerPage(+event.target.value);
      setPage(0);
    };
    const handleDownload = () =>{
      alert("download hoito na !!!")
    }
  
  return (
    <>
    <Paper sx={{ width: '100%', overflow: 'hidden' }}>
      <div>
      {/* <Button variant="contained">Create Organization</Button> */}
    
      <ProjectModal/>
      </div>
       <TableContainer  sx={{ maxHeight: 345 }}>
      <Table  stickyHeader aria-label="sticky table">
        <TableHead>
          <TableRow>
            <TableCell  style={{backgroundColor: ' rgb(203, 200, 200)', fontWeight:'bold'}} align="center">Project Name</TableCell>
            <TableCell  style={{backgroundColor: ' rgb(203, 200, 200)', fontWeight:'bold'}} align="center">Created At</TableCell>
            <TableCell  style={{backgroundColor: ' rgb(203, 200, 200)', fontWeight:'bold'}} align="center">Number of Tracking ID</TableCell>
            <TableCell  style={{backgroundColor: ' rgb(203, 200, 200)', fontWeight:'bold'}} align="center">Number Tracked</TableCell>
            <TableCell  style={{backgroundColor: ' rgb(203, 200, 200)', fontWeight:'bold'}} align="center">Tracked Count</TableCell>
            <TableCell  style={{backgroundColor: ' rgb(203, 200, 200)', fontWeight:'bold'}} align="center">Number of Device</TableCell>
            <TableCell  style={{backgroundColor: ' rgb(203, 200, 200)', fontWeight:'bold'}} align="center">Action</TableCell>
            <TableCell  style={{backgroundColor: ' rgb(203, 200, 200)', fontWeight:'bold'}} align="center">Project Summary</TableCell>
          </TableRow>
        </TableHead>
        <TableBody>
          {rows.map((row) => (
            <TableRow
              key={row.projectName}
              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}
            >
              <TableCell component="th" scope="row" align="center">
                {row.projectName}
              </TableCell>
              <TableCell align="center">{row.registrationDate}</TableCell>
              <TableCell align="center">{row.numberofTracking}</TableCell>
              <TableCell align="center">{row.numberTracked}</TableCell>
              <TableCell align="center">{row.trackedCount}</TableCell>
              <TableCell align="center">{row.numberofDevice}</TableCell>
              
                <TableCell align="center">
                <div>
      <Button
        id="basic-button"
        aria-controls={open ? 'basic-menu' : undefined}
        aria-haspopup="true"
        aria-expanded={open ? 'true' : undefined}
        onClick={handleClick}
        variant="contained"
      >
        Action
        <ArrowDropDownIcon/>
      </Button>
      <Menu
        id="basic-menu"
        anchorEl={anchorEl}
        open={open}
        onClose={handleClose}
        MenuListProps={{
          'aria-labelledby': 'basic-button',
        }}
      >
        <div style={{display:'block'}}>
        <Button variant="contained" style={{margin:'10px',display:'block'}} onClick={handleClose}>Creating Tracking ID List</Button>
        <Button variant="contained" style={{margin:'10px',display:'block'}} onClick={handleClose}>Creating Tracking QR Code List</Button>
        <Button variant="contained" style={{margin:'10px',display:'block'}} onClick={handleClose}>Creating Tracking QR Tag</Button>
        </div>
      </Menu>
    </div>
   
                  </TableCell>
                  <TableCell align="center">
                    

   <Stack justifyContent="center" spacing={2} direction="row">
      <Button variant="contained" onClick={handleDownload}>Download</Button>
    </Stack>
                  </TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>
    </TableContainer>
      <TablePagination
        rowsPerPageOptions={[10, 25, 100]}
        component="div"
        count={dashboardData.length}
        rowsPerPage={rowsPerPage}
        page={page}
        onPageChange={handleChangePage}
        onRowsPerPageChange={handleChangeRowsPerPage}
      />
    </Paper>
    </>
  )
}

export default UserDashboardTable

